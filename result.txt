{'original_price': '0.27', 'app_name': 'Surf', 'weight': 0L, 'trace_app_id': 'com.surfsup', 'direct': 2, 'special_type': ',23,', 'date': 4294967295L, 'tag': 1, 'appdesc': 'Surf helps you find apps for where you are and where you&#039;re going.', 'operator': 'ALL', 'category': 'Application', 'id': 3339457L, 'sub_category': 'SOCIAL', 'campaign_type': 2, 'icon': 'http://d11kdtiohse1a9.cloudfront.net/common/2016/01/01/02/35/d41d8cd98f00b204e9800998ecf8427e_201601010235101451586910228_128X128.png', 'user_id': 7996L, 'network': 27, 'cost_daily_budget': 0L, 'os_version': '4.0,4.1,4.2,4.3,4.4,5.0,5.1,6.0', 'pre_click_rate': 0, 'mobile_traffic': '1,2', 'pre_click': 2, 'pre_click_interval': 168, 'platform': 1L, 'startrate': '0.0', 'appinstall': '100', 'left_total_budget': 0L, 'appsize': '26', 'direct_url': '', 'start_date': 1451997863L, 'status': 2L, 'landing_type': 2, 'jump_type': 1, '_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x7fea80e05a50>, 'end_date': 1546605863L, 'timestamp': 1451997863L, 'price': '0.27', 'promote_url': 'https://admin.appnext.com/appLink.aspx?b=84225&e=87511&q=', 'ctype': 1, 'update': '', 'hours': '', 'reason': 'auto restart_active:2016-02-25 04:03:13', 'device': 'ALL', 'total_budget': 0L, 'daily_budget': 0L, 'target_app_id': '0', 'advertiser_id': 659L, 'apk_url': 'http://d11kdtiohse1a9.cloudfront.net/common/2016/03/08/13/02/com.surfsup_75_1.apk', 'name': 'mobvistaappnext_appnext_84225', 'country': '["IE"]', 'button': 'Install', 'daily_cap': 0L, 'flow': 5L, 'preview_url': 'https://play.google.com/store/apps/details?id=com.surfsup', 'direct_trace_app_id': 'com.surfsup', 'android_version': '', 'source': 6, 'source_id': '4e8401a96f50dd74b9bf14b936d5ac6d', 'network_cid': '84225', 'sdk_trace_app_id': ''}
None
Feature: [3-1]新增AD Unit功能 # features/features/old/ad_unit/ad_unit_add.feature:1

  @finish @ad_unit_add @ad_unit_add_banner
  Scenario: [3-1-1]新建一个Banner类型的AD Unit，新建成功！    # features/features/old/ad_unit/ad_unit_add.feature:7
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 按下Add AD Unit按钮，弹出新增广告位窗口                  # None
    * 输入AD Unit的AD Unit Name：“TestAddUnit201”    # None
    * 选择AD Unit的APP：“TestApp_iOS2014”            # None
    * 选择AD Unit的AD Format：“Banner”               # None
    * 选择AD Unit的Auto Refresh：“30s”               # None
    * 选择AD Unit的Template：“Single Pic”            # None
    * 按下AD Unit的Save按钮，保存新建的广告位                  # None
    * 新增AD Unit广告位成功！                            # None

  @finish @ad_unit_add @ad_unit_add_interstitial
  Scenario: [3-1-2]新增一个Interstitial类型的AD Unit        # features/features/old/ad_unit/ad_unit_add.feature:29
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”     # None
    * 按下Add AD Unit按钮，弹出新增广告位窗口                      # None
    * 输入AD Unit的AD Unit Name：“InterstitialUint02”    # None
    * 选择AD Unit的APP：“TestApp_iOS2014”                # None
    * 选择AD Unit的AD Format：“Interstitial”             # None
    * 选择AD Unit的Orientation：“Horizontal Screen”      # None
    * 选择AD Unit的Template：“Single Pic,Mutli-elements” # None
    * 按下AD Unit的Save按钮，保存新建的广告位                      # None
    * 新增AD Unit广告位成功！                                # None

  @finish @ad_unit_add @ad_unit_add_native
  Scenario: [3-1-3]新建一个Native类型的AD Unit，新建成功！    # features/features/old/ad_unit/ad_unit_add.feature:51
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 按下Add AD Unit按钮，弹出新增广告位窗口                  # None
    * 输入AD Unit的AD Unit Name：“NativeUnit01”      # None
    * 选择AD Unit的APP：“TestApp_iOS2014”            # None
    * 选择AD Unit的AD Format：“Native”               # None
    * 按下AD Unit的Save按钮，保存新建的广告位                  # None
    * 新增AD Unit广告位成功！                            # None

  @unfinish @ad_unit_add @ad_unit_add_appwall
  Scenario: [3-1-4]新增一个APP WALL类型的AD Unit        # features/features/old/ad_unit/ad_unit_add.feature:69
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 按下Add AD Unit按钮，弹出新增广告位窗口                  # None
    * 输入AD Unit的AD Unit Name：“AppWallUnit01”     # None
    * 选择AD Unit的APP：“TestApp_iOS2014”            # None
    * 选择AD Unit的AD Format：“APP WALL”             # None
    * 设置AD Unit的Entrance Image：“Default”         # None
    * 选择AD Unit的Red Point Setting：“On”           # None
    * 输入AD Unit的Red Point Interval：“23”          # None
    * 按下AD Unit的Save按钮，保存新建的广告位                  # None
    * 新增AD Unit广告位成功！                            # None

Feature: [3-6]AD Unit删除功能 # features/features/old/ad_unit/ad_unit_delete.feature:1

  @ad_unit_delete @ad_unit_delete_one
  Scenario: [3-6-1]删除单个AD Unit，删除成功！             # features/features/old/ad_unit/ad_unit_delete.feature:6
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 选中要删除的“单个”AD Unit                          # None
    * 按下AD Unit的Delete按钮，弹出删除确认窗口                # None
    * 按下删除AD Unit确认的OK按钮，删除选中的广告位                # None
    * 删除AD Unit广告位成功！                            # None

  @ad_unit_delete @ad_unit_cancel_delete
  Scenario: [3-6-2]删除单个AD Unit时，取消操作，取消删除成功！     # features/features/old/ad_unit/ad_unit_delete.feature:19
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 选中要删除的“单个”AD Unit                          # None
    * 按下AD Unit的Delete按钮，弹出删除确认窗口                # None
    * 按下删除AD Unit确认的Cancel按钮，取消删除选中的广告位          # None
    * AD Unit广告位删除取消成功！                          # None

  @ad_unit_delete @ad_unit_delete_many
  Scenario: [3-6-3]删除多个AD Unit，删除成功！             # features/features/old/ad_unit/ad_unit_delete.feature:32
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 选中要删除的“多个”AD Unit                          # None
    * 按下AD Unit的Delete按钮，弹出删除确认窗口                # None
    * 按下删除AD Unit确认的OK按钮，删除选中的广告位                # None
    * 删除AD Unit广告位成功！                            # None

  @ad_unit_delete @ad_unit_delete_cancel_many
  Scenario: [3-6-4]删除多个AD Unit时，取消操作，取消删除成功！     # features/features/old/ad_unit/ad_unit_delete.feature:45
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 选中要删除的“多个”AD Unit                          # None
    * 按下AD Unit的Delete按钮，弹出删除确认窗口                # None
    * 按下删除AD Unit确认的Cancel按钮，取消删除选中的广告位          # None
    * AD Unit广告位删除取消成功！                          # None

Feature: [3-5]设置My Offer功能 # features/features/old/ad_unit/ad_unit_offer.feature:1

  @ad_unit_offer
  Scenario: [3-5-1]广告位My Offer为空，跳转到My Offer页面         # features/features/old/ad_unit/ad_unit_offer.feature:5
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”       # None
    * 按下ID为“197”的My Offer Setting，进入My Offer Setting页面 # None
    * 按下Set My Offer按钮，进入My Offer页面                    # None

Feature: [3-2]AD Unit查询功能 # features/features/old/ad_unit/ad_unit_query.feature:1

  @finish @ad_unit_query @ad_unit_query_by_id
  Scenario: [3-2-1]按AD Unit ID维度查询AD Unit，查询成功！  # features/features/old/ad_unit/ad_unit_query.feature:7
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 输入AD Unit的ID：“473”                         # None
    * 按下AD Unit的Search按钮，查找指定的广告位                # None
    * 查询AD Unit广告位成功！                            # None

  @finish @ad_unit_query @ad_unit_query_by_name
  Scenario: [3-2-2]按AD Unit Name维度查询AD Unit，查询成功！  # features/features/old/ad_unit/ad_unit_query.feature:19
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”   # None
    * 输入AD Unit的广告位名称：“TestUnitQuery200”           # None
    * 按下AD Unit的Search按钮，查找指定的广告位                  # None
    * 查询AD Unit广告位成功！                              # None

  @unfinish @ad_unit_query @ad_unit_query_by_name
  Scenario: [3-2-3]按APP Name维度查询AD Unit，查询成功！    # features/features/old/ad_unit/ad_unit_query.feature:31
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit” # None
    * 输入AD Unit的APP Name：“TestApp_Android200”    # None
    * 按下AD Unit的Search按钮，查找指定的广告位                # None
    * 查询AD Unit广告位成功！                            # None

Feature: [3-4]AD Source设置功能 # features/features/old/ad_unit/ad_unit_source.feature:1

  @ad_unit_source @ad_unit_source_banner_mobvista
  Scenario: [3-4-1]开启Banner类型的AD Unit的Mobvista Realtime广告源，开启成功！    # features/features/old/ad_unit/ad_unit_source.feature:6
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                    # None
    * 按下ID为“416”的My Offer的AD Source Setting按钮，进入AD Source Setting页面 # None
    * 设置广告源“Mobvista Realtime”的Status为：“ON”                         # None
    * 按下AD Source Setting的保存按钮                                      # None
    * 开启Mobvista Realtime广告源成功！                                     # None

  @ad_unit_source @ad_unit_source_banner_myoffer
  Scenario: [3-4-2]开启Banner类型的AD Unit的My Offer广告源，开启成功！             # features/features/old/ad_unit/ad_unit_source.feature:19
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                    # None
    * 按下ID为“416”的My Offer的AD Source Setting按钮，进入AD Source Setting页面 # None
    * 设置广告源“My Offer”的Status为：“ON”                                  # None
    * 按下AD Source Setting的保存按钮                                      # None
    * 开启My Offer广告源成功！                                              # None

  @ad_unit_source @ad_unit_source_banner_facebook_config
  Scenario: [3-4-4]配置Banner类型的AD Unit的Facebook Audience Network广告源，配置成功！  # features/features/old/ad_unit/ad_unit_source.feature:32
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                          # None
    * 按下ID为“417”的My Offer的AD Source Setting按钮，进入AD Source Setting页面       # None
    * 按下“Facebook Audience Network”的Unconfigured按钮，弹出配置窗口                 # None
    * 配置广告源“Facebook Audience Network”，ID设置为：“1234567890aa”               # None
    * 按下广告源ID配置的保存按钮                                                      # None
    * 配置My Offer广告源成功！                                                    # None

  @ad_unit_source @ad_unit_source_banner_facebook
  Scenario: [3-4-5]开启Banner类型的AD Unit的Facebook Audience Network广告源，开启成功！  # features/features/old/ad_unit/ad_unit_source.feature:47
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                          # None
    * 按下ID为“416”的My Offer的AD Source Setting按钮，进入AD Source Setting页面       # None
    * 设置广告源“Facebook Audience Network”的Status为：“ON”                       # None
    * 按下AD Source Setting的保存按钮                                            # None
    * 开启My Offer广告源成功！                                                    # None

  @ad_unit_source @ad_unit_source_banner_pubnative_config
  Scenario: [3-4-6]配置Banner类型的AD Unit的PubNative Realtime广告源，配置成功！              # features/features/old/ad_unit/ad_unit_source.feature:60
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                               # None
    * 按下ID为“417”的My Offer的AD Source Setting按钮，进入AD Source Setting页面            # None
    * 按下“PubNative Realtime”的Unconfigured按钮，弹出配置窗口                             # None
    * “PubNative Realtime”广告源配置，ID设置为：“1234567890pub”，Token为：“1234567890token” # None
    * 按下广告源ID配置的保存按钮                                                           # None
    * 配置My Offer广告源成功！                                                         # None

  @ad_unit_source @ad_unit_source_banner_pubnative
  Scenario: [3-4-7]开启Banner类型的AD Unit的PubNative Realtime广告源，开启成功！   # features/features/old/ad_unit/ad_unit_source.feature:75
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                    # None
    * 按下ID为“416”的My Offer的AD Source Setting按钮，进入AD Source Setting页面 # None
    * 设置广告源“PubNative Realtime”的Status为：“ON”                        # None
    * 按下AD Source Setting的保存按钮                                      # None
    * 开启My Offer广告源成功！                                              # None

  @ad_unit_source @ad_unit_source_banner_admob_config
  Scenario: [3-4-8]配置Banner类型的AD Unit的AdMob广告源，配置成功！                # features/features/old/ad_unit/ad_unit_source.feature:88
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                    # None
    * 按下ID为“417”的My Offer的AD Source Setting按钮，进入AD Source Setting页面 # None
    * 按下“AdMob”的Unconfigured按钮，弹出配置窗口                               # None
    * 配置广告源“AdMob”，ID设置为：“1234567890admob”                          # None
    * 按下广告源ID配置的保存按钮                                                # None
    * 配置My Offer广告源成功！                                              # None

  @ad_unit_source @ad_unit_source_banner_admob
  Scenario: [3-4-9]开启Banner类型的AD Unit的AdMob广告源，开启成功！                # features/features/old/ad_unit/ad_unit_source.feature:103
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                    # None
    * 按下ID为“416”的My Offer的AD Source Setting按钮，进入AD Source Setting页面 # None
    * 设置广告源“AdMob”的Status为：“ON”                                     # None
    * 按下AD Source Setting的保存按钮                                      # None
    * 开启My Offer广告源成功！                                              # None

  @ad_unit_source @ad_unit_source_banner_mytarget_config
  Scenario: [3-4-10]配置Banner类型的AD Unit的My Target广告源，配置成功！           # features/features/old/ad_unit/ad_unit_source.feature:116
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                    # None
    * 按下ID为“417”的My Offer的AD Source Setting按钮，进入AD Source Setting页面 # None
    * 按下“My Target”的Unconfigured按钮，弹出配置窗口                           # None
    * 配置广告源“My Target”，ID设置为：“1234567890mytarget”                   # None
    * 按下广告源ID配置的保存按钮                                                # None
    * 配置My Offer广告源成功！                                              # None

  @ad_unit_source @ad_unit_source_banner_mytarget
  Scenario: [3-4-11]开启Banner类型的AD Unit的My Target广告源，开启成功！           # features/features/old/ad_unit/ad_unit_source.feature:131
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                    # None
    * 按下ID为“416”的My Offer的AD Source Setting按钮，进入AD Source Setting页面 # None
    * 设置广告源“My Target”的Status为：“ON”                                 # None
    * 按下AD Source Setting的保存按钮                                      # None
    * 开启My Offer广告源成功！                                              # None

Feature: [3-3]AD Unit修改功能 # features/features/old/ad_unit/ad_unit_update.feature:1

  @ad_unit_update @ad_unit_update_native_name
  Scenario: [3-3-1]修改Native类型的AD Unit的Name属性，修改成功！    # features/features/old/ad_unit/ad_unit_update.feature:6
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”      # None
    * 按下ID为“424”的Native类型的AD Unit的AD Unit Name，弹出修改窗口 # None
    * 输入AD Unit新的AD Unit Name：“UpdateNative17”        # None
    * 按下AD Unit的Save按钮，保存修改                           # None
    * 修改AD Unit广告位成功！                                 # None

  @ad_unit_update @ad_unit_update_banner_name
  Scenario: [3-3-2]修改Banner类型的AD Unit的Name属性，修改成功！    # features/features/old/ad_unit/ad_unit_update.feature:19
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”      # None
    * 按下ID为“420”的Banner类型的AD Unit的AD Unit Name，弹出修改窗口 # None
    * 输入AD Unit新的AD Unit Name：“UpdateBanner01”        # None
    * 按下AD Unit的Save按钮，保存修改                           # None
    * 修改AD Unit广告位成功！                                 # None

  @ad_unit_update @ad_unit_update_banner_refresh
  Scenario: [3-3-3]修改Banner类型的AD Unit的Auto Refresh属性，修改成功！  # features/features/old/ad_unit/ad_unit_update.feature:32
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”            # None
    * 按下ID为“420”的Banner类型的AD Unit的AD Unit Name，弹出修改窗口       # None
    * 选择AD Unit的Auto Refresh：“60s”                          # None
    * 按下AD Unit的Save按钮，保存修改                                 # None
    * 修改AD Unit广告位成功！                                       # None

  @ad_unit_update @ad_unit_update_banner_template
  Scenario: [3-3-4]修改Banner类型的AD Unit的Template属性，修改成功！  # features/features/old/ad_unit/ad_unit_update.feature:45
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”        # None
    * 按下ID为“419”的Banner类型的AD Unit的AD Unit Name，弹出修改窗口   # None
    * 选择AD Unit的Template：“Mutli-elements”               # None
    * 按下AD Unit的Save按钮，保存修改                             # None
    * 修改AD Unit广告位成功！                                   # None

  @ad_unit_update @ad_unit_update_interstitial_name
  Scenario: [3-3-5]修改Interstitial类型的AD Unit的Name属性，修改成功！    # features/features/old/ad_unit/ad_unit_update.feature:58
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”            # None
    * 按下ID为“423”的Interstitial类型的AD Unit的AD Unit Name，弹出修改窗口 # None
    * 输入AD Unit新的AD Unit Name：“UpdateInterstitial02”        # None
    * 按下AD Unit的Save按钮，保存修改                                 # None
    * 修改AD Unit广告位成功！                                       # None

  @ad_unit_update @ad_unit_update_interstitial_template
  Scenario: [3-3-6]修改Interstitial类型的AD Unit的Template属性      # features/features/old/ad_unit/ad_unit_update.feature:71
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”            # None
    * 按下ID为“423”的Interstitial类型的AD Unit的AD Unit Name，弹出修改窗口 # None
    * 选择AD Unit的Template：“Single Pic”                       # None
    * 按下AD Unit的Save按钮，保存修改                                 # None
    * 修改AD Unit广告位成功！                                       # None

  @ad_unit_update @unfinish
  Scenario: [3-3-7]修改APP WALL类型的AD Unit的Name属性，修改成功！   # features/features/old/ad_unit/ad_unit_update.feature:84
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”       # None
    * 按下ID为“11”的APP WALL类型的AD Unit的AD Unit Name，弹出修改窗口 # None
    * 输入AD Unit新的Name：“Single Pic”                     # None
    * 按下AD Unit的Save按钮，保存修改                            # None
    * 修改AD Unit广告位成功！                                  # None

  @ad_unit_update @unfinish
  Scenario: [3-3-8]修改APP WALL类型的AD Unit的Entrance Image属性，修改成功！  # features/features/old/ad_unit/ad_unit_update.feature:97
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                # None
    * 按下ID为“11”的APP WALL类型的AD Unit的AD Unit Name，弹出修改窗口          # None
    * 选择AD Unit的Entrance Image：“Default”                        # None
    * 按下AD Unit的Save按钮，保存修改                                     # None
    * 修改AD Unit广告位成功！                                           # None

  @ad_unit_update @unfinish
  Scenario: [3-3-8]修改APP WALL类型的AD Unit的Entrance Image属性，修改成功！  # features/features/old/ad_unit/ad_unit_update.feature:110
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                # None
    * 按下ID为“11”的APP WALL类型的AD Unit的AD Unit Name，弹出修改窗口          # None
    * 选择AD Unit的Red Point Setting：“Off”                         # None
    * 按下AD Unit的Save按钮，保存修改                                     # None
    * 修改AD Unit广告位成功！                                           # None

  @ad_unit_update @unfinish
  Scenario: [3-3-10]修改APP WALL类型的AD Unit的Red Point Interval属性，修改成功！  # features/features/old/ad_unit/ad_unit_update.feature:123
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”                     # None
    * 按下ID为“11”的APP WALL类型的AD Unit的AD Unit Name，弹出修改窗口               # None
    * 输入AD Unit新的Red Point Interval：“22”                             # None
    * 按下AD Unit的Save按钮，保存修改                                          # None
    * 修改AD Unit广告位成功！                                                # None

  @ad_unit_update @unfinish
  Scenario: [3-3-11]修改Native类型的AD Unit的Name属性为空，修改失败！  # features/features/old/ad_unit/ad_unit_update.feature:136
    * 访问“AD Unit”页面：“http://m.mobvista.com/unit”       # None
    * 按下ID为“11”的APP WALL类型的AD Unit的AD Unit Name，弹出修改窗口 # None
    * 输入AD Unit新的AD Unit Name：“ ”                      # None
    * 按下AD Unit的Save按钮，保存修改                            # None
    * 修改AD Unit广告位失败！                                  # None

Feature: [4-2]Offline API Offer激活功能 # features/features/old/api_offer/api_offer_active.feature:1

  @finish @api_offer_active @api_offer_active_one
  Scenario: [4-2-1]激活单个Offline API Offer，激活成功！              # features/features/old/api_offer/api_offer_active.feature:7
    * 访问“Offline API Offer”页面：“http://m.mobvista.com/offer” # None
    * 选中要激活的“单个”Offline API Offer                           # None
    * 按下Offline API Offer的Start按钮                           # None
    * 按下Offline API Offer激活确认的OK按钮                          # None
    * 激活Offline API Offer成功！                                # None

  @finish @api_offer_active @api_offer_active_many
  Scenario: [4-2-2]激活多个Offline API Offer                    # features/features/old/api_offer/api_offer_active.feature:21
    * 访问“Offline API Offer”页面：“http://m.mobvista.com/offer” # None
    * 选中要激活的“多个”Offline API Offer                           # None
    * 按下Offline API Offer的Start按钮                           # None
    * 按下Offline API Offer激活确认的OK按钮                          # None
    * 激活Offline API Offer成功！                                # None

Feature: [4-3]Offline API Offer暂停功能 # features/features/old/api_offer/api_offer_paused.feature:1

  @finish @api_offer_paused @api_offer_paused_one
  Scenario: [4-3-1]暂停单个Offline API Offer，暂停成功！              # features/features/old/api_offer/api_offer_paused.feature:7
    * 访问“Offline API Offer”页面：“http://m.mobvista.com/offer” # None
    * 选中要暂停的“单个”Offline API Offer                           # None
    * 按下Offline API Offer的Paused按钮                          # None
    * 按下Offline API Offer暂停确认的OK按钮                          # None
    * 暂停Offline API Offer成功！                                # None

  @finish @api_offer_paused @api_offer_paused_many
  Scenario: [4-3-2]暂停多个Offline API Offer，暂停成功！              # features/features/old/api_offer/api_offer_paused.feature:21
    * 访问“Offline API Offer”页面：“http://m.mobvista.com/offer” # None
    * 选中要暂停的“多个”Offline API Offer                           # None
    * 按下Offline API Offer的Paused按钮                          # None
    * 按下Offline API Offer暂停确认的OK按钮                          # None
    * 暂停Offline API Offer成功！                                # None

Feature: [4-1]Offline API Offer查询功能 # features/features/old/api_offer/api_offer_query.feature:1

  @finish @api_offer_query @api_offer_query_by_id
  Scenario: [4-1-1]按Offer ID维度查询Offline API Offer，查询成功！     # features/features/old/api_offer/api_offer_query.feature:7
    * 操作API Offer前数据准备操作                                    # features/steps/api_offer.py:28
'Connection' object has no attribute 'execute'
    * 访问“Offline API Offer”页面：“http://m.mobvista.com/offer” # features/steps/common.py:28
    * 输入Offline API Offer的Offer ID：“21119292”               # features/steps/api_offer_query.py:36
    * 按下Search按钮                                            # features/steps/common.py:37
    * 查询Offline API Offer成功！                                # features/steps/api_offer_query.py:44
TestSource_003_Title
{'status': 1L, 'trace_app_id': 'com.goh.daya.ydonline', 'app_name': 'God of Highschool', 'price': '1.50', 'ctype': 1, 'source': 6, 'id': 21119292L, 'icon': 'http://test-adn.mobvista.com/upload_files/campaign/2016/04/15/146069270536824.png'}
{'status': 1, 'trace_app_id': u'com.goh.daya.ydonline', 'app_name': u'God of Highschool', 'price': u'1.50', 'ctype': 1, 'source': None, 'id': u'21119292', 'icon': u'http://test-adn.mobvista.com/upload_files/campaign/2016/04/15/146069270536824.png'}
key: source not equals!


expected 6, but was None
      Assertion Failed: page data not right!
      Expected: <True>
           but: was <False>

    * 操作API Offer后数据清理操作                                    # None

Feature: [5-2]Offline API Source激活功能 # features/features/old/api_source/api_source_active.feature:1

  @finish @api_source @api_source_active
  Scenario: [5-2-1]激活一个Paused状态的Offline API Source，激活成功！          # features/features/old/api_source/api_source_active.feature:7
    * 操作Offline API Source前数据准备                                   # None
    * 访问“Offline API Source”页面：“http://m.mobvista.com/advertiser” # None
    * 按下Offline API Source的ID为“660”的激活按钮                          # None
    * 按下Offline API Source激活确认的OK按钮                               # None
    * 激活Offline API Source成功！                                     # None
    * 操作Offline API Source后数据清理                                   # None

Feature: [5-3]Offline API Source暂停功能 # features/features/old/api_source/api_source_paused.feature:1

  @finish @api_source @api_source_paused
  Scenario: [5-3-1]暂停一个Active状态的Offline API Source，暂停成功！          # features/features/old/api_source/api_source_paused.feature:7
    * 操作Offline API Source前数据准备                                   # None
    * 访问“Offline API Source”页面：“http://m.mobvista.com/advertiser” # None
    * 按下Offline API Source的ID为“659”的暂停按钮                          # None
    * 按下Offline API Source暂停确认的OK按钮                               # None
    * 暂停Offline API Source成功！                                     # None
    * 操作Offline API Source后数据清理                                   # None

Feature: [5-1]Offline API Source查询功能 # features/features/old/api_source/api_source_query.feature:1

  @finish @api_source @api_source_query_by_id
  Scenario: [5-1-1]按ID维度查询Offline API Source，查询成功！                # features/features/old/api_source/api_source_query.feature:7
    * 操作Offline API Source前数据准备                                   # None
    * 访问“Offline API Source”页面：“http://m.mobvista.com/advertiser” # None
    * 输入Offline API Source的Offer ID：“659”                         # None
    * 按下Search按钮                                                  # None
    * 查询Offline API Source成功！                                     # None
    * 操作Offline API Source后数据清理                                   # None

Feature: [2-1]新增APP功能 # features/features/old/app/app_add.feature:1

  @finish @app_add @app_add_android
  Scenario: [2-1-1]新建一个No Limit的Android类型的APP，新建成功！  # features/features/old/app/app_add.feature:7
    * 新增App前数据准备操作                                   # None
    * 访问“APP”页面：“http://m.mobvista.com/app”          # None
    * 按下Add APP按钮，弹出新增APP窗口                          # None
    * 输入APP的APP Name：“TestAppAdd_Android”            # None
    * 选择APP的Platform：“Android”                       # None
    * 选择APP的APK Offer Setting：“No Limit”             # None
    * 按下APP的Save按钮，保存新增的APP                          # None
    * 新增APP成功！                                       # None
    * 新增App后数据清理操作                                   # None

  @finish @app_add @app_add_iOS
  Scenario: [2-1-2]新建一个iOS类型的APP，新建成功！      # features/features/old/app/app_add.feature:29
    * 新增App前数据准备操作                          # None
    * 访问“APP”页面：“http://m.mobvista.com/app” # None
    * 按下Add APP按钮，弹出新增APP窗口                 # None
    * 输入APP的APP Name：“TestAppAdd_iOS”       # None
    * 选择APP的Platform：“iOS”                  # None
    * 按下APP的Save按钮，保存新增的APP                 # None
    * 新增APP成功！                              # None
    * 新增App后数据清理操作                          # None

Feature: [2-2]查询APP功能 # features/features/old/app/app_query.feature:1

  @finish @app_query @app_query_by_id
  Scenario: [2-2-1]按ID维度查询APP，查询成功！         # features/features/old/app/app_query.feature:7
    * 操作App前数据准备操作                          # None
    * 访问“APP”页面：“http://m.mobvista.com/app” # None
    * 输入查询的APP ID：“24401”                   # None
    * 按下APP的Search按钮，查询APP                  # None
    * 查询APP成功！                              # None
    * 操作App后数据清理操作                          # None

  @unfinish @app_query @app_query_by_name
  Scenario: [2-2-2]按Name维度查询APP，查询成功！       # features/features/old/app/app_query.feature:23
    * 操作App前数据准备操作                          # None
    * 访问“APP”页面：“http://m.mobvista.com/app” # None
    * 输入查询的APP Name：“TestApp_iOS”           # None
    * 按下APP的Search按钮，查询APP                  # None
    * 查询APP成功！                              # None
    * 操作App后数据清理操作                          # None

  @finish @app_query @app_query_by_id_none
  Scenario: [2-2-3]按ID维度查询APP，APP不存在，查询失败！  # features/features/old/app/app_query.feature:39
    * 查询不存在App前数据准备操作                       # None
    * 访问“APP”页面：“http://m.mobvista.com/app” # None
    * 输入查询的APP ID：“24401”                   # None
    * 按下APP的Search按钮，查询APP                  # None
    * APP不存在，查询APP失败！                       # None
    * 查询不存在App后数据清理操作                       # None

  @finish @app_query @app_query_by_id_deleted
  Scenario: [2-2-4]按ID维度查询APP，APP已删除，查询失败！  # features/features/old/app/app_query.feature:56
    * 查询已删除App前数据准备操作                       # None
    * 访问“APP”页面：“http://m.mobvista.com/app” # None
    * 输入查询的APP ID：“24401”                   # None
    * 按下APP的Search按钮，查询APP                  # None
    * APP已删除，查询APP失败！                       # None
    * 查询已删除App后数据清理操作                       # None

Feature: [2-3]修改APP功能 # features/features/old/app/app_update.feature:1

  @finish @app_update @app_update_name
  Scenario: [2-3-1]修改Android类型APP的APP Name属性，修改成功！  # features/features/old/app/app_update.feature:7
    * 访问“APP”页面：“http://m.mobvista.com/app”         # None
    * 按下ID为“24401”的APP的Edit按钮，弹出APP修改窗口             # None
    * 输入APP的APP Name：“TestAppUpdate”                # None
    * 按下APP的Save按钮，保存修改                             # None
    * 修改APP成功！                                      # None

  @finish @app_update @app_update_direct_market
  Scenario: [2-3-2]修改Android类型APP的APK Offer Setting属性，修改成功！  # features/features/old/app/app_update.feature:21
    * 访问“APP”页面：“http://m.mobvista.com/app”                  # None
    * 按下ID为“24401”的APP的Edit按钮，弹出APP修改窗口                      # None
    * 选择APP的APK Offer Setting：“No APK”                       # None
    * 按下APP的Save按钮，保存修改                                      # None
    * 修改APP成功！                                               # None

  @finish @app_update @app_update_ios_name
  Scenario: [2-3-3]修改iOS类型APP的APP Name属性，修改成功！  # features/features/old/app/app_update.feature:35
    * 访问“APP”页面：“http://m.mobvista.com/app”     # None
    * 按下ID为“24402”的APP的Edit按钮，弹出APP修改窗口         # None
    * 输入APP的APP Name：“UpdateiOSAppName”         # None
    * 按下APP的Save按钮，保存修改                         # None
    * 修改APP成功！                                  # None

Feature: [1-1]登录功能 # features/features/old/login/login.feature:1

  @finish @login @login_success
  Scenario: [1-1-1]账号密码均正确，成功登录后台！                  # features/features/old/login/login.feature:7
    * 操作登陆功能自动化测试前数据准备                              # None
    * 访问“登录首页”页面：“http://m.mobvista.com/user/login” # None
    * 输入登录账号：“754414393@qq.com”                     # None
    * 输入登录密码：“llk123”                               # None
    * 按下登录Login按钮                                   # None
    * 登录成功！                                         # None
    * 操作登陆功能自动化测试后数据清理                              # None

  @finish @login @login_failure
  Scenario: [1-1-2]账号错误，密码正确，登录失败！                  # features/features/old/login/login.feature:25
    * 操作登陆功能自动化测试前数据准备                              # None
    * 访问“登录首页”页面：“http://m.mobvista.com/user/login” # None
    * 输入登录账号：“error754414393@qq.com”                # None
    * 输入登录密码：“llk123”                               # None
    * 按下登录Login按钮                                   # None
    * 登录失败！系统提示：“Email or Password is wrong”        # None

  @finish @login @login_failure
  Scenario: [1-1-3]密码错误，账号正确，登录失败！                  # features/features/old/login/login.feature:41
    * 操作登陆功能自动化测试前数据准备                              # None
    * 访问“登录首页”页面：“http://m.mobvista.com/user/login” # None
    * 输入登录账号：“754414393@qq.com”                     # None
    * 输入登录密码：“123llk”                               # None
    * 按下登录Login按钮                                   # None
    * 登录失败！系统提示：“Email or Password is wrong”        # None

Feature: [1-2]注销功能 # features/features/old/login/logout.feature:1

  @finish @logout
  Scenario: [1-2-1]注销用户登录，成功退出后台！  # features/features/old/login/logout.feature:6
    * 操作注销功能自动化测试前数据准备             # None
    * 按下Logout按钮，注销系统              # None
    * 注销成功！                        # None

Feature: [6-1]新增My Offer功能 # features/features/old/my_offer/my_offer_add.feature:1

  @my_offer_add
  Scenario: [6-1-1]新增一个Active状态的My Offer                      # features/features/old/my_offer/my_offer_add.feature:5
    * 访问“My Offer”页面：“http://m.mobvista.com/offer/me”         # None
    * 按下Add My Offer按钮，进入新增Offer页面                            # None
    * 输入My Offer的Offer Name：“Offer Name 001”                  # None
    * 输入My Offer的Tracking URL：“http://www.baidu.com”          # None
    * 选择My Offer的Platform：“Android”                           # None
    * 选择My Offer的Link Type：“Google Play”                      # None
    * 选择My Offer的Country：“All Countries”                      # None
    * 选择My Offer的Carrier：“Target all carriers”                # None
    * 选择My Offer的Devices：“Target all devices”                 # None
    * 选择My Offer的Traffic：“WIFI,2G/3G/4G”                      # None
    * 选择My Offer的OS Version：“No Min,No Max”                   # None
    * 选择My Offer的Start Date：“2015-11-12 12:00:00”             # None
    * 选择My Offer的End Date：“2017-12-22 12:00:00”               # None
    * 输入My Offer的Frequency Cap：“10”                           # None
    * 选择My Offer的Billing Type：“CPI”                           # None
    * 输入My Offer的Price：“1.01”                                 # None
    * 输入My Offer的Budget：“1”                                   # None
    * 选择My Offer的“单个”AD Unit                                  # None
    * 按下My Offer的Next按钮，进入下一页                                 # None
    * 输入My Offer的APP Name：“我是APP”                             # None
    * 输入My Offer的Description：“恩恩，我是APP”                       # None
    * 选择My Offer的Category：“App”                               # None
    * 输入My Offer的Star Rating：“1”                              # None
    * 设置My Offer的Icon：“../resource/app_pic.png”               # None
    * 设置My Offer的“320x50”的Images：“../resource/320x50.jpg”     # None
    * 设置My Offer的“300x250”的Images：“../resource/300x250.jpg”   # None
    * 设置My Offer的“480x320”的Images：“../resource/480x320.jpg”   # None
    * 设置My Offer的“320x480”的Images：“../resource/320x480.jpg”   # None
    * 设置My Offer的“1200x627”的Images：“../resource/1200x627.jpg” # None
    * 按下My Offer的Save Button，保存My Offer                       # None
    * 新增My Offer成功！                                           # None

Feature: [6-4]删除My Offer功能 # features/features/old/my_offer/my_offer_delete.feature:1

  @my_offer_delete
  Scenario: [6-4-1]删除一个My Offer                       # features/features/old/my_offer/my_offer_delete.feature:5
    * 访问“My Offer”页面：“http://m.mobvista.com/offer/me” # None
    * 选中要删除的“单个”My Offer                              # None
    * 按下My Offer的Delete按钮，删除指定Offer                   # None
    * 删除My Offer成功！                                   # None

  @my_offer_delete
  Scenario: [6-4-2]删除多个My Offer                       # features/features/old/my_offer/my_offer_delete.feature:15
    * 访问“My Offer”页面：“http://m.mobvista.com/offer/me” # None
    * 选中要删除的“多个”My Offer                              # None
    * 按下My Offer的Delete按钮，删除指定Offer                   # None
    * 删除My Offer成功！                                   # None

Feature: [6-2]查询My Offer功能 # features/features/old/my_offer/my_offer_query.feature:1

  @my_offer_query @my_offer_query_by_id
  Scenario: [6-2-1]按Offer ID维度查询My Offer，查询成功！        # features/features/old/my_offer/my_offer_query.feature:6
    * 访问“My Offer”页面：“http://m.mobvista.com/offer/me” # None
    * 输入My Offer的Offer ID：“1007046”                   # None
    * 按下My Offer的Search按钮，查询指定Offer                   # None
    * 查询My Offer成功！                                   # None

Feature: [6-3]修改My Offer功能 # features/features/old/my_offer/my_offer_update.feature:1

  @my_offer_update
  Scenario: [6-3-1]Start一个My Offer                    # features/features/old/my_offer/my_offer_update.feature:5
    * 访问“My Offer”页面：“http://m.mobvista.com/offer/me” # None
    * 选中要Start的“单个”My Offer                           # None
    * 按下My Offer的Start按钮，激活指定Offer                    # None
    * 激活My Offer成功！                                   # None

  @my_offer_update
  Scenario: [6-3-2]Pause一个My Offer                    # features/features/old/my_offer/my_offer_update.feature:15
    * 访问“My Offer”页面：“http://m.mobvista.com/offer/me” # None
    * 选中要Pause的“单个”My Offer                           # None
    * 按下My Offer的Pause按钮，暂停指定Offer                    # None
    * 暂停My Offer成功！                                   # None

  @my_offer_update
  Scenario: [6-3-3]修改My Offer的Offer Name属性            # features/features/old/my_offer/my_offer_update.feature:25
    * 访问“My Offer”页面：“http://m.mobvista.com/offer/me” # None
    * 按下要修改的My Offer的Edit按钮：“1007046”                 # None
    * 输入My Offer新的Offer Name：“New Offer Name”         # None
    * 按下My Offer的Next按钮，进入下一页                         # None
    * 按下My Offer的Save Button，保存My Offer               # None
    * 修改My Offer成功！                                   # None


Failing scenarios:
  features/features/old/api_offer/api_offer_query.feature:7  [4-1-1]按Offer ID维度查询Offline API Offer，查询成功！

0 features passed, 1 failed, 20 skipped
0 scenarios passed, 1 failed, 60 skipped
4 steps passed, 1 failed, 353 skipped, 0 undefined
Took 0m3.707s
